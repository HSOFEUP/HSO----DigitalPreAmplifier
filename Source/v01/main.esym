C L "MAIN" 0 15 1 "FUNCTION"
D G "__PCM__" 0 471 ""4.065""
D G "__DEVICE__" 0 471 "877"
D G "__DATE__" 0 471 ""26-dec.-14""
D G "__TIME__" 0 471 ""18:15:47"" "Standard Header file for the PIC16F877A device ////////////////"
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_B0" 1 26 "48"
d G "PIN_B1" 1 27 "49"
d G "PIN_B2" 1 28 "50"
d G "PIN_B3" 1 29 "51"
d G "PIN_B4" 1 30 "52"
d G "PIN_B5" 1 31 "53"
d G "PIN_B6" 1 32 "54"
d G "PIN_B7" 1 33 "55"
d G "PIN_C0" 1 35 "56"
d G "PIN_C1" 1 36 "57"
d G "PIN_C2" 1 37 "58"
d G "PIN_C3" 1 38 "59"
d G "PIN_C4" 1 39 "60"
d G "PIN_C5" 1 40 "61"
d G "PIN_C6" 1 41 "62"
d G "PIN_C7" 1 42 "63"
d G "PIN_D0" 1 44 "64"
d G "PIN_D1" 1 45 "65"
d G "PIN_D2" 1 46 "66"
d G "PIN_D3" 1 47 "67"
d G "PIN_D4" 1 48 "68"
d G "PIN_D5" 1 49 "69"
d G "PIN_D6" 1 50 "70"
d G "PIN_D7" 1 51 "71"
d G "PIN_E0" 1 53 "72"
d G "PIN_E1" 1 54 "73"
d G "PIN_E2" 1 55 "74"
d G "FALSE" 1 58 "0"
d G "TRUE" 1 59 "1"
d G "BYTE" 1 61 "int8"
d G "BOOLEAN" 1 62 "int1"
d G "getc" 1 64 "getch"
d G "fgetc" 1 65 "getch"
d G "getchar" 1 66 "getch"
d G "putc" 1 67 "putchar"
d G "fputc" 1 68 "putchar"
d G "fgets" 1 69 "gets"
d G "fputs" 1 70 "puts"
d G "WDT_FROM_SLEEP" 1 75 "3"
d G "WDT_TIMEOUT" 1 76 "11"
d G "MCLR_FROM_SLEEP" 1 77 "19"
d G "MCLR_FROM_RUN" 1 78 "27"
d G "NORMAL_POWER_UP" 1 79 "25"
d G "BROWNOUT_RESTART" 1 80 "26"
d G "RTCC_INTERNAL" 1 88 "0"
d G "RTCC_EXT_L_TO_H" 1 89 "32"
d G "RTCC_EXT_H_TO_L" 1 90 "48"
d G "RTCC_DIV_1" 1 92 "8"
d G "RTCC_DIV_2" 1 93 "0"
d G "RTCC_DIV_4" 1 94 "1"
d G "RTCC_DIV_8" 1 95 "2"
d G "RTCC_DIV_16" 1 96 "3"
d G "RTCC_DIV_32" 1 97 "4"
d G "RTCC_DIV_64" 1 98 "5"
d G "RTCC_DIV_128" 1 99 "6"
d G "RTCC_DIV_256" 1 100 "7"
d G "RTCC_8_BIT" 1 103 "0"
d G "WDT_18MS" 1 115 "0x8008"
d G "WDT_36MS" 1 116 "9"
d G "WDT_72MS" 1 117 "10"
d G "WDT_144MS" 1 118 "11"
d G "WDT_288MS" 1 119 "12"
d G "WDT_576MS" 1 120 "13"
d G "WDT_1152MS" 1 121 "14"
d G "WDT_2304MS" 1 122 "15"
d G "T1_DISABLED" 1 128 "0"
d G "T1_INTERNAL" 1 129 "0x85"
d G "T1_EXTERNAL" 1 130 "0x87"
d G "T1_EXTERNAL_SYNC" 1 131 "0x83"
d G "T1_CLK_OUT" 1 133 "8"
d G "T1_DIV_BY_1" 1 135 "0"
d G "T1_DIV_BY_2" 1 136 "0x10"
d G "T1_DIV_BY_4" 1 137 "0x20"
d G "T1_DIV_BY_8" 1 138 "0x30"
d G "T2_DISABLED" 1 143 "0"
d G "T2_DIV_BY_1" 1 144 "4"
d G "T2_DIV_BY_4" 1 145 "5"
d G "T2_DIV_BY_16" 1 146 "6"
d G "CCP_OFF" 1 152 "0"
d G "CCP_CAPTURE_FE" 1 153 "4"
d G "CCP_CAPTURE_RE" 1 154 "5"
d G "CCP_CAPTURE_DIV_4" 1 155 "6"
d G "CCP_CAPTURE_DIV_16" 1 156 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 157 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 158 "9"
d G "CCP_COMPARE_INT" 1 159 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 1 160 "0xB"
d G "CCP_PWM" 1 161 "0xC"
d G "CCP_PWM_PLUS_1" 1 162 "0x1c"
d G "CCP_PWM_PLUS_2" 1 163 "0x2c"
d G "CCP_PWM_PLUS_3" 1 164 "0x3c"
v G "CCP_1" 1 165 "int16"
v G "CCP_2" 1 169 "int16"
d G "PSP_ENABLED" 1 178 "0x10"
d G "PSP_DISABLED" 1 179 "0"
d G "SPI_MASTER" 1 186 "0x20"
d G "SPI_SLAVE" 1 187 "0x24"
d G "SPI_L_TO_H" 1 188 "0"
d G "SPI_H_TO_L" 1 189 "0x10"
d G "SPI_CLK_DIV_4" 1 190 "0"
d G "SPI_CLK_DIV_16" 1 191 "1"
d G "SPI_CLK_DIV_64" 1 192 "2"
d G "SPI_CLK_T2" 1 193 "3"
d G "SPI_SS_DISABLED" 1 194 "1"
d G "SPI_SAMPLE_AT_END" 1 196 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 197 "0x4000"
d G "UART_ADDRESS" 1 203 "2"
d G "UART_DATA" 1 204 "4"
d G "A0_A3_A1_A3" 1 208 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 209 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 210 "0xbcf05"
d G "NC_NC_NC_NC" 1 211 "0x0ff07"
d G "A0_A3_A1_A2" 1 212 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 213 "0x9ef01"
d G "A0_VR_A1_VR" 1 214 "0x3ff06"
d G "A3_VR_A2_VR" 1 215 "0xcff0e"
d G "CP1_INVERT" 1 216 "0x0000010"
d G "CP2_INVERT" 1 217 "0x0000020"
d G "VREF_LOW" 1 225 "0xa0"
d G "VREF_HIGH" 1 226 "0x80"
d G "VREF_A2" 1 228 "0x40"
d G "ADC_OFF" 1 236 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 237 "0x10000"
d G "ADC_CLOCK_DIV_4" 1 238 "0x4000"
d G "ADC_CLOCK_DIV_8" 1 239 "0x0040"
d G "ADC_CLOCK_DIV_16" 1 240 "0x4040"
d G "ADC_CLOCK_DIV_32" 1 241 "0x0080"
d G "ADC_CLOCK_DIV_64" 1 242 "0x4080"
d G "ADC_CLOCK_INTERNAL" 1 243 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 1 246 "7" "None"
d G "ALL_ANALOG" 1 247 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 1 248 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 1 249 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 250 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 251 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 252 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 1 253 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 1 254 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 1 255 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 1 256 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 1 257 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 258 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 259 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 260 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 261 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 1 262 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 1 263 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 264 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 265 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 266 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 1 267 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 1 268 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 1 269 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 1 270 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 271 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 272 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 273 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 277 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 278 "1"
d G "ADC_READ_ONLY" 1 279 "6"
d G "L_TO_H" 1 291 "0x40"
d G "H_TO_L" 1 292 "0"
d G "GLOBAL" 1 294 "0x0BC0"
d G "INT_RTCC" 1 295 "0x0B20"
d G "INT_RB" 1 296 "0xFF0B08"
d G "INT_EXT" 1 297 "0x0B10"
d G "INT_AD" 1 298 "0x8C40"
d G "INT_TBE" 1 299 "0x8C10"
d G "INT_RDA" 1 300 "0x8C20"
d G "INT_TIMER1" 1 301 "0x8C01"
d G "INT_TIMER2" 1 302 "0x8C02"
d G "INT_CCP1" 1 303 "0x8C04"
d G "INT_CCP2" 1 304 "0x8D01"
d G "INT_SSP" 1 305 "0x8C08"
d G "INT_PSP" 1 306 "0x8C80"
d G "INT_BUSCOL" 1 307 "0x8D08"
d G "INT_EEPROM" 1 308 "0x8D10"
d G "INT_TIMER0" 1 309 "0x0B20"
d G "INT_COMP" 1 310 "0x8D40"
D G "_STDIO" 2 12 ""
D G "_STRING" 3 12 ""
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 21 "unsigned int8"
D G "wchar_t" 4 22 "char"
D G "NULL" 4 23 "0"
D G "offsetof" 4 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 3 19 10 "FUNCTION"
V L "s1" 3 34 "*int8"
V L "s2" 3 34 "*int8"
V L "n" 3 34 "int8"
F G "memmove" 3 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 3 36 "*int8"
V L "sc2" 3 37 "*int8"
C L "strcopy" 3 19 3 "FUNCTION"
V L "s1" 3 53 "*int8"
V L "s2" 3 53 "*int8"
F G "strcopy" 3 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 55 "*int8"
C L "strncpy" 3 19 4 "FUNCTION"
V L "s1" 3 69 "*int8"
V L "s2" 3 69 "*int8"
V L "n" 3 69 "int8"
F G "strncpy" 3 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 3 71 "*int8"
C L "strcat" 3 19 3 "FUNCTION"
V L "s1" 3 86 "*int8"
V L "s2" 3 86 "*int8"
F G "strcat" 3 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 88 "*int8"
C L "strncat" 3 19 2 "FUNCTION"
V L "s1" 3 104 "*int8"
V L "s2" 3 104 "*int8"
V L "n" 3 104 "int8"
F G "strncat" 3 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 3 106 "*int8"
C L "memcmp" 3 19 3 "FUNCTION"
V L "s1" 3 128 "*int8"
V L "s2" 3 128 "*int8"
V L "n" 3 128 "int8"
F G "memcmp" 3 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 3 130 "*int8"
V L "su2" 3 130 "*int8"
C L "strcmp" 3 19 2 "FUNCTION"
V L "s1" 3 142 "*int8"
V L "s2" 3 142 "*int8"
F G "strcmp" 3 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 3 19 2 "FUNCTION"
V L "s1" 3 152 "*int8"
V L "s2" 3 152 "*int8"
F G "strcoll" 3 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 3 19 4 "FUNCTION"
V L "s1" 3 165 "*int8"
V L "s2" 3 165 "*int8"
V L "n" 3 165 "int8"
F G "strncmp" 3 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 3 19 3 "FUNCTION"
V L "s1" 3 177 "*int8"
V L "s2" 3 177 "*int8"
V L "n" 3 177 "int8"
F G "strxfrm" 3 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 3 179 "*int8"
V L "n1" 3 180 "int8"
C L "memchr" 3 19 3 "FUNCTION"
V L "s" 3 199 "*int8"
V L "c" 3 199 "int8"
V L "n" 3 199 "int8"
F G "memchr" 3 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 3 201 "int8"
V L "su" 3 202 "*int8"
C L "strchr" 3 19 2 "FUNCTION"
V L "s" 3 213 "*int8"
V L "c" 3 213 "int8"
F G "strchr" 3 214 "*int8(*int8 s,int8 c)"
V L "s1" 3 225 "*int8"
V L "s2" 3 225 "*int8"
F G "strcspn" 3 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 227 "*int8"
V L "sc2" 3 227 "*int8"
C L "strpbrk" 3 19 4 "FUNCTION"
V L "s1" 3 240 "*int8"
V L "s2" 3 240 "*int8"
F G "strpbrk" 3 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 242 "*int8"
V L "sc2" 3 242 "*int8"
C L "strrchr" 3 19 2 "FUNCTION"
V L "s" 3 255 "*int8"
V L "c" 3 255 "int8"
F G "strrchr" 3 256 "*int8(*int8 s,int8 c)"
V L "p" 3 257 "*int8"
V L "s1" 3 270 "*int8"
V L "s2" 3 270 "*int8"
F G "strspn" 3 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 272 "*int8"
V L "sc2" 3 272 "*int8"
C L "strstr" 3 19 6 "FUNCTION"
V L "s1" 3 289 "*int8"
V L "s2" 3 289 "*int8"
F G "strstr" 3 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 291 "*int8"
V L "t" 3 291 "*int8"
C L "strtok" 3 19 13 "FUNCTION"
V L "s1" 3 328 "*int8"
V L "s2" 3 328 "*int8"
F G "strtok" 3 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 3 330 "*int8"
V L "end" 3 330 "*int8"
V L "save" 3 331 "*int8"
V L "s" 3 377 "*int8"
F G "strlen" 3 378 "*int8(*int8 s)"
V L "sc" 3 379 "*int8"
C L "stricmp" 3 19 2 "FUNCTION"
V L "s1" 3 388 "*int8"
V L "s2" 3 388 "*int8"
F G "stricmp" 3 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 3 19 3 "FUNCTION"
V L "s" 3 402 "*int8"
F G "strlwr" 3 403 "*int8(*int8 s)"
V L "p" 3 404 "*int8"
D G "_STDLIB" 6 12 ""
D G "RAND_MAX" 6 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 6 25 "1"
T G "div_t" 6 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 6 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atof" 4 3 6 "FUNCTION"
C L "atof" 6 43 2 "FUNCTION"
C L "atof" 6 46 1 "*"
C L "atof" 6 46 1 "*"
V L "s" 6 50 "*int8"
F G "atof" 6 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 6 76 1 "*"
C L "atof" 6 76 1 "*"
C L "atof" 6 76 1 "*"
V L "s" 6 82 "*int8"
F G "atoe" 6 82 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 6 89 1 "*"
C L "atoe" 6 89 1 "*"
V L "s" 6 93 "*int8"
F G "atoi" 6 93 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 6 101 "*int8"
F G "atoi32" 6 101 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 6 89 2 "FUNCTION"
V L "num" 6 122 "sint32"
V L "base" 6 122 "int8"
V L "s" 6 122 "*int8"
F G "itoa" 6 122 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 6 124 1 "*"
C L "itoa" 6 124 1 "*"
V L "s" 6 128 "*int8"
F G "atol" 6 128 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 6 130 1 "*"
C L "atol" 6 130 1 "*"
C L "atol" 6 130 3 "*"
V L "s" 6 138 "*int8"
V L "endptr" 6 138 "*int8"
F G "strtod" 6 138 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 6 130 2 "FUNCTION"
C L "strtod" 6 141 1 "*"
C L "strtod" 6 141 1 "*"
C L "strtod" 6 141 2 "*"
C L "strtod" 6 154 1 "*"
C L "strtod" 6 154 1 "*"
C L "strtod" 6 154 1 "*"
C L "strtod" 6 154 1 "*"
V L "s" 6 160 "*int8"
V L "endptr" 6 160 "*int8"
V L "base" 6 160 "sint8"
F G "strtol" 6 160 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 6 162 1 "*"
C L "strtol" 6 162 1 "*"
C L "strtol" 6 162 1 "*"
C L "strtol" 6 162 1 "*"
V L "s" 6 168 "*int8"
V L "endptr" 6 168 "*int8"
V L "base" 6 168 "sint8"
F G "strtoul" 6 168 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 6 162 1 "FUNCTION"
C L "strtoul" 6 174 1 "*"
C L "strtoul" 6 174 1 "*"
C L "strtoul" 6 174 1 "*"
C L "strtoul" 6 174 1 "*"
C L "strtoul" 6 174 1 "*"
F G "rand" 6 183 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
C L "rand" 6 185 1 "*"
V L "seed" 6 205 "int32"
F G "srand" 6 205 "void(int32 seed)" "Memory management functions"
C L "srand" 6 185 3 "FUNCTION"
V L "string" 6 219 "*int8"
F G "system" 6 219 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 6 185 1 "FUNCTION"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 1 "*"
C L "system" 6 225 4 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
C L "system" 6 243 1 "*"
D G "labs" 6 263 "abs"
V L "numer" 6 265 "sint8"
V L "denom" 6 265 "sint8"
F G "div" 6 265 "div_t(sint8 numer,sint8 denom)"
V L "numer" 6 266 "sint16"
V L "denom" 6 266 "sint16"
F G "ldiv" 6 266 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 6 243 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
V L "numer" 6 288 "sint8"
V L "denom" 6 288 "sint8"
F G "div" 6 289 "div_t(sint8 numer,sint8 denom)"
V L "val" 6 290 "div_t"
V L "numer" 6 296 "sint16"
V L "denom" 6 296 "sint16"
F G "ldiv" 6 297 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 6 298 "ldiv_t"
V L "s" 6 305 "*int8"
F G "atof" 6 306 "float(*int8 s)"
V L "pow10" 6 307 "float"
V L "result" 6 308 "float"
V L "sign" 6 309 "int8"
V L "c" 6 310 "int8"
V L "ptr" 6 311 "int8"
V L "s" 6 536 "*int8"
F G "atoe" 6 537 "float(*int8 s)"
V L "pow10" 6 538 "float"
V L "result" 6 539 "float"
V L "sign" 6 540 "int8"
V L "expsign" 6 541 "int8"
V L "c" 6 542 "int8"
V L "ptr" 6 543 "int8"
V L "i" 6 544 "int8"
V L "exp" 6 545 "float"
V L "expcnt" 6 546 "int8"
C L "atoe" 6 572 1 "FUNCTION"
V L "s" 6 604 "*int8"
F G "atoi" 6 605 "sint8(*int8 s)"
V L "result" 6 606 "sint8"
V L "sign" 6 607 "int8"
V L "base" 6 607 "int8"
V L "index" 6 607 "int8"
V L "c" 6 608 "int8"
C L "atoi" 6 572 1 "FUNCTION"
C L "atoi" 6 572 1 "FUNCTION"
C L "atoi" 6 572 1 "FUNCTION"
C L "atoi" 6 572 1 "FUNCTION"
C L "atoi" 6 572 1 "FUNCTION"
C L "atoi" 6 572 1 "FUNCTION"
V L "s" 6 673 "*int8"
F G "atol" 6 674 "sint16(*int8 s)"
V L "result" 6 675 "sint16"
V L "sign" 6 676 "int8"
V L "base" 6 676 "int8"
V L "index" 6 676 "int8"
V L "c" 6 677 "int8"
C L "atol" 6 572 1 "FUNCTION"
C L "atol" 6 572 1 "FUNCTION"
C L "atol" 6 572 1 "FUNCTION"
C L "atol" 6 572 1 "FUNCTION"
C L "mult_with10" 6 572 1 "FUNCTION"
V L "num" 6 740 "int32"
F G "mult_with10" 6 741 "sint32(int32 num)"
V L "s" 6 746 "*int8"
F G "atoi32" 6 747 "sint32(*int8 s)"
V L "result" 6 748 "sint32"
V L "sign" 6 749 "int8"
V L "base" 6 749 "int8"
V L "index" 6 749 "int8"
V L "c" 6 750 "int8"
C L "atoi32" 6 572 1 "FUNCTION"
C L "atoi32" 6 572 1 "FUNCTION"
C L "atoi32" 6 572 1 "FUNCTION"
C L "atoi32" 6 572 1 "FUNCTION"
C L "atoi32" 6 572 1 "FUNCTION"
V L "num" 6 945 "sint32"
V L "base" 6 945 "int8"
V L "s" 6 945 "*int8"
F G "itoa" 6 946 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 6 947 "int32"
V L "i" 6 948 "int8"
V L "sign" 6 948 "int8"
V L "cnt" 6 948 "int8"
V L "c" 6 949 "int8"
C L "itoa" 6 572 1 "FUNCTION"
C L "itoa" 6 572 1 "FUNCTION"
C L "itoa" 6 572 1 "FUNCTION"
C L "itoa" 6 572 1 "FUNCTION"
C L "itoa" 6 572 1 "FUNCTION"
V L "s" 6 983 "*int8"
V L "endptr" 6 983 "*int8"
F G "strtod" 6 983 "float(*int8 s,*int8 endptr)"
V L "pow10" 6 984 "float"
V L "result" 6 985 "float"
V L "sign" 6 986 "int8"
V L "point" 6 986 "int8"
V L "c" 6 987 "int8"
V L "ptr" 6 988 "int8"
V L "s" 6 1245 "*int8"
V L "endptr" 6 1245 "*int8"
V L "base" 6 1245 "sint8"
F G "strtoul" 6 1246 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 6 1247 "*int8"
V L "s1" 6 1247 "*int8"
V L "sd" 6 1247 "*int8"
V L "x" 6 1248 "int16"
V L "sign" 6 1249 "int8"
V L "digits" 6 1250 "int8[1]"
C L "strtoul" 6 572 1 "FUNCTION"
C L "strtoul" 6 572 1 "FUNCTION"
C L "strtoul" 6 572 1 "FUNCTION"
V L "s" 6 1307 "*int8"
V L "endptr" 6 1307 "*int8"
V L "base" 6 1307 "sint8"
F G "strtol" 6 1308 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 6 1309 "*int8"
V L "s1" 6 1309 "*int8"
V L "sd" 6 1309 "*int8"
V L "x" 6 1310 "sint16"
V L "sign" 6 1311 "int8"
V L "digits" 6 1312 "int8[1]"
C L "strtol" 6 572 1 "FUNCTION"
C L "strtol" 6 572 1 "FUNCTION"
C L "strtol" 6 572 1 "FUNCTION"
V L "string" 6 1370 "*int8"
F G "system" 6 1371 "sint8(*int8 string)"
V L "s" 6 1375 "*int8"
V L "n" 6 1375 "int8"
F G "mblen" 6 1376 "int8(*int8 s,int8 n)"
V L "pwc" 6 1380 "*int8"
V L "s" 6 1380 "*int8"
V L "n" 6 1380 "int8"
F G "mbtowc" 6 1381 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 6 1386 "*int8"
V L "wchar" 6 1386 "int8"
F G "wctomb" 6 1387 "int8(*int8 s,int8 wchar)"
V L "pwcs" 6 1392 "*int8"
V L "s" 6 1392 "*int8"
V L "n" 6 1392 "int8"
F G "mbstowcs" 6 1393 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 6 1398 "*int8"
V L "pwcs" 6 1398 "*int8"
V L "n" 6 1398 "int8"
F G "wcstombs" 6 1399 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 6 1408 "int32"
F G "rand" 6 1411 "int16()"
V L "seed" 6 1416 "int32"
F G "srand" 6 1417 "void(int32 seed)"
V L "p1" 6 1426 "*int8"
V L "p2" 6 1426 "*int8"
T G "*_Cmpfun" 6 1426 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 6 1433 "*int8"
V L "qitems" 6 1433 "int8"
V L "qsize" 6 1433 "int8"
V L "cmp" 6 1433 "_Cmpfun"
F G "qsort" 6 1433 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 6 1434 "int8"
V L "j" 6 1434 "int8"
V L "i" 6 1434 "int8"
V L "l" 6 1434 "int8"
V L "done" 6 1435 "int1"
V L "t" 6 1436 "int8[16]"
V L "key" 6 1461 "*int8"
V L "base" 6 1461 "*int8"
V L "num" 6 1461 "int8"
V L "width" 6 1461 "int8"
V L "cmp" 6 1461 "_Cmpfun"
F G "bsearch" 6 1462 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 6 1463 "*int8"
V L "q" 6 1463 "*int8"
V L "n" 6 1464 "int8"
V L "pivot" 6 1465 "int8"
V L "val" 6 1466 "sint8"
C L "bsearch" 6 572 1 "FUNCTION"
V G "lcd" 7 48 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" "#locate lcd = getenv("sfr:PORTD")    // This puts the entire structure over the port"
D G "set_tris_lcd" 7 66 "(x) set_tris_d(x)"
D G "lcd_type" 7 70 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 7 73 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 7 76 "int8[4]"
V G "LCD_WRITE" 7 84 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}"
V G "LCD_READ" 7 85 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}"
C L "lcd_read_byte" 7 2 1 "FUNCTION"
F G "lcd_read_byte" 7 89 "int8()"
V L "low" 7 90 "int8"
V L "high" 7 90 "int8"
V L "n" 7 108 "int8"
F G "lcd_send_nibble" 7 108 "void(int8 n)"
V L "address" 7 117 "int8"
V L "n" 7 117 "int8"
F G "lcd_send_byte" 7 117 "void(int8 address,int8 n)"
F G "lcd_init" 7 131 "void()"
V L "i" 7 132 "int8"
V L "x" 7 148 "int8"
V L "y" 7 148 "int8"
F G "lcd_gotoxy" 7 148 "void(int8 x,int8 y)"
V L "address" 7 149 "int8"
V L "c" 7 159 "int8"
F G "lcd_putc" 7 159 "void(int8 c)"
V L "x" 7 170 "int8"
V L "y" 7 170 "int8"
F G "lcd_getc" 7 170 "int8(int8 x,int8 y)"
V L "value" 7 171 "int8"
C L "lcd_getc" 7 2 1 "FUNCTION"
D G "NPOTENTIOMETERS" 0 17 "4"
D G "SIZEBUFFER" 0 18 "16"
D G "PCFBUTTONADDRESS" 0 22 "0xFF" "Check"
D G "PCFLEDBUTTONADDRESS" 0 25 "0x42"
D G "PCFLINERECADDRESS" 0 26 "0x40"
D G "PCFPHONOADDRESS" 0 27 ""
D G "PCFLCDDDRESS" 0 28 ""
D G "BUTOONPRESSED" 0 31 "PIN_B7"
D G "LINEUP" 0 35 "0x01"
D G "LINEDOWN" 0 36 "0x02"
D G "LINEUPDOWN" 0 37 "0x03"
D G "RECUP" 0 39 "0x04"
D G "RECDOWN" 0 40 "0x08"
D G "RECUPDOWN" 0 41 "0x0C"
D G "DIRECT" 0 43 ""
D G "LOUD" 0 44 ""
D G "ADCTHRESHOLDDETECTION" 0 48 "0x05"
D G "SCHEDULINGTIMEPERIOD" 0 51 "10"
D G "CONVERTADCTOPERCENTAGE" 0 54 "(VAL)((VAL/1024)*100)"
D G "CONVERTADCTODB" 0 55 "(VAL)(((VAL-512)/512)*12)"
V G "nameRecLine" 0 58 "*int8[1]"
V G "bufferPotNew" 0 62 "int16[4]"
V G "bufferPotOld" 0 63 "int16[4]"
V G "pcfButton" 0 65 "int8" "Buffer for buttons"
V G "buffer" 0 66 "int8[16]"
V G "flagKeyPressed" 0 67 "int8"
V G "flagLCDUpdate" 0 67 "int8"
V G "lineChannel" 0 68 "int8"
V G "recChannel" 0 68 "int8"
V G "ledButton" 0 68 "int8"
V G "flagScheduling" 0 70 "int1"
V G "x" 0 72 "int8"
V G "y" 0 72 "int8" "Prototipes"
F G "tecla_pulsada" 0 75 "void()"
V L "address" 0 76 "int8"
F G "readPCFButtons" 0 76 "int8(int8 address)"
V L "data" 0 77 "int8"
F G "decodePressedButton" 0 77 "void(int8 data)"
F G "initLcd" 0 78 "void()"
V L "count" 0 79 "int16"
F G "long_delay_ms" 0 79 "void(int16 count)"
F G "configGPIO" 0 80 "void()"
F G "configADC" 0 81 "void()"
F G "readADCS" 0 82 "void()"
F G "checkADCChanges" 0 83 "void()"
V L "address" 0 84 "int8"
V L "lineChannel" 0 84 "int8"
V L "recChannel" 0 84 "int8"
V L "recActive" 0 84 "int8"
F G "setLineRecChannel" 0 84 "void(int8 address,int8 lineChannel,int8 recChannel,int8 recActive)"
V L "buffer" 0 85 "*int8"
V L "line" 0 85 "int8"
F G "updateLCD" 0 85 "void(*int8 buffer,int8 line)"
F G "saveCurrentValues" 0 86 "void()"
F G "restoreSavedValues" 0 87 "void()"
V L "volume" 0 88 "int16"
V L "balance" 0 88 "int16"
F G "setPGAValue" 0 88 "void(int16 volume,int16 balance)"
V L "bass" 0 89 "int16"
V L "tremble" 0 89 "int16"
F G "setToneValue" 0 89 "void(int16 bass,int16 tremble)" "INTERRUPT ZONE//////////////////////////"
C L "setToneValue" 0 16 1 "FUNCTION"
F G "tecla_pulsada" 0 97 "void()"
C L "tecla_pulsada" 0 16 1 "FUNCTION"
C L "tecla_pulsada" 0 16 1 "FUNCTION"
C L "timer2_isr" 0 16 1 "FUNCTION"
F G "timer2_isr" 0 115 "void()" "Keep variables that are local _local_"
V L "tick" 0 117 "int8"
C L "timer2_isr" 0 16 1 "FUNCTION"
C L "timer2_isr" 0 16 1 "FUNCTION"
C L "readPCFButtons" 0 16 2 "FUNCTION"
V L "address" 0 131 "int8"
F G "readPCFButtons" 0 131 "int8(int8 address)"
V L "data" 0 132 "int8" "Disable all"
C L "readPCFButtons" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
V L "data" 0 145 "int8"
F G "decodePressedButton" 0 145 "void(int8 data)"
V L "decode" 0 146 "int8"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "decodePressedButton" 0 16 1 "FUNCTION"
C L "initLcd" 0 16 1 "FUNCTION"
F G "initLcd" 0 205 "void()"
C L "initLcd" 0 16 1 "FUNCTION"
C L "initLcd" 0 16 1 "FUNCTION"
C L "initLcd" 0 16 1 "FUNCTION"
C L "initLcd" 0 16 1 "FUNCTION"
C L "long_delay_ms" 0 16 1 "FUNCTION"
V L "count" 0 232 "int16"
F G "long_delay_ms" 0 232 "void(int16 count)"
V L "k" 0 233 "int16"
C L "configGPIO" 0 16 1 "FUNCTION"
F G "configGPIO" 0 241 "void()" "Define port mode"
C L "configADC" 0 16 1 "FUNCTION"
F G "configADC" 0 252 "void()"
C L "configADC" 0 16 1 "FUNCTION"
C L "configADC" 0 16 1 "FUNCTION"
C L "readADCS" 0 16 1 "FUNCTION"
F G "readADCS" 0 260 "void()"
V L "i" 0 261 "int8"
C L "checkADCChanges" 0 16 1 "FUNCTION"
F G "checkADCChanges" 0 274 "void()"
V L "i" 0 275 "int8" "Check for all channels the ADC threshold"
C L "checkADCChanges" 0 16 1 "FUNCTION"
C L "checkADCChanges" 0 16 1 "FUNCTION"
C L "setPGAValue" 0 16 1 "FUNCTION"
V L "volume" 0 312 "int16"
V L "balance" 0 312 "int16"
F G "setPGAValue" 0 312 "void(int16 volume,int16 balance)" "Function: Set the Tones values"
V L "bass" 0 318 "int16"
V L "tremble" 0 318 "int16"
F G "setToneValue" 0 318 "void(int16 bass,int16 tremble)" "Function: Select the line and rec relays"
V L "address" 0 324 "int8"
V L "lineChannel" 0 324 "int8"
V L "recChannel" 0 324 "int8"
V L "recActive" 0 324 "int8"
F G "setLineRecChannel" 0 324 "void(int8 address,int8 lineChannel,int8 recChannel,int8 recActive)"
V L "lineChannelDecoded" 0 325 "int8"
V L "recChannelDecoded" 0 325 "int8" "Translate to the channel"
C L "setLineRecChannel" 0 16 1 "FUNCTION"
C L "setLineRecChannel" 0 16 1 "FUNCTION"
C L "setLineRecChannel" 0 16 1 "FUNCTION"
C L "updateLCD" 0 16 1 "FUNCTION"
V L "buffer" 0 351 "*int8"
F G "updateLCD" 0 351 "void(*int8 buffer,int8 recActive)"
C L "updateLCD" 0 16 1 "FUNCTION"
C L "saveCurrentValues" 0 16 1 "FUNCTION"
F G "saveCurrentValues" 0 397 "void()" "write_eeprom(0x00,memChannel);"
C L "restoreSavedValues" 0 16 1 "FUNCTION"
F G "restoreSavedValues" 0 404 "void()" "memChannel=read_eeprom(0x00);"
C L "restoreSavedValues" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
F G "MAIN" 0 411 "void()"
C L "MAIN" 0 16 2 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
C L "MAIN" 0 16 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "i2c_poll" 0 1
