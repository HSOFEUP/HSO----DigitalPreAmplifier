D G "__PCM__" 0 437 ""4.065""
D G "__DEVICE__" 0 437 "877"
D G "__DATE__" 0 437 ""08-Jan-14""
D G "__TIME__" 0 437 ""19:37:32"" "Standard Header file for the PIC16F877A device ////////////////"
d G "PIN_A0" 1 19 "40"
d G "PIN_A1" 1 20 "41"
d G "PIN_A2" 1 21 "42"
d G "PIN_A3" 1 22 "43"
d G "PIN_A4" 1 23 "44"
d G "PIN_A5" 1 24 "45"
d G "PIN_B0" 1 26 "48"
d G "PIN_B1" 1 27 "49"
d G "PIN_B2" 1 28 "50"
d G "PIN_B3" 1 29 "51"
d G "PIN_B4" 1 30 "52"
d G "PIN_B5" 1 31 "53"
d G "PIN_B6" 1 32 "54"
d G "PIN_B7" 1 33 "55"
d G "PIN_C0" 1 35 "56"
d G "PIN_C1" 1 36 "57"
d G "PIN_C2" 1 37 "58"
d G "PIN_C3" 1 38 "59"
d G "PIN_C4" 1 39 "60"
d G "PIN_C5" 1 40 "61"
d G "PIN_C6" 1 41 "62"
d G "PIN_C7" 1 42 "63"
d G "PIN_D0" 1 44 "64"
d G "PIN_D1" 1 45 "65"
d G "PIN_D2" 1 46 "66"
d G "PIN_D3" 1 47 "67"
d G "PIN_D4" 1 48 "68"
d G "PIN_D5" 1 49 "69"
d G "PIN_D6" 1 50 "70"
d G "PIN_D7" 1 51 "71"
d G "PIN_E0" 1 53 "72"
d G "PIN_E1" 1 54 "73"
d G "PIN_E2" 1 55 "74"
d G "FALSE" 1 58 "0"
d G "TRUE" 1 59 "1"
d G "BYTE" 1 61 "int8"
d G "BOOLEAN" 1 62 "int1"
d G "getc" 1 64 "getch"
d G "fgetc" 1 65 "getch"
d G "getchar" 1 66 "getch"
d G "putc" 1 67 "putchar"
d G "fputc" 1 68 "putchar"
d G "fgets" 1 69 "gets"
d G "fputs" 1 70 "puts"
d G "WDT_FROM_SLEEP" 1 75 "3"
d G "WDT_TIMEOUT" 1 76 "11"
d G "MCLR_FROM_SLEEP" 1 77 "19"
d G "MCLR_FROM_RUN" 1 78 "27"
d G "NORMAL_POWER_UP" 1 79 "25"
d G "BROWNOUT_RESTART" 1 80 "26"
d G "RTCC_INTERNAL" 1 88 "0"
d G "RTCC_EXT_L_TO_H" 1 89 "32"
d G "RTCC_EXT_H_TO_L" 1 90 "48"
d G "RTCC_DIV_1" 1 92 "8"
d G "RTCC_DIV_2" 1 93 "0"
d G "RTCC_DIV_4" 1 94 "1"
d G "RTCC_DIV_8" 1 95 "2"
d G "RTCC_DIV_16" 1 96 "3"
d G "RTCC_DIV_32" 1 97 "4"
d G "RTCC_DIV_64" 1 98 "5"
d G "RTCC_DIV_128" 1 99 "6"
d G "RTCC_DIV_256" 1 100 "7"
d G "RTCC_8_BIT" 1 103 "0"
d G "WDT_18MS" 1 115 "0x8008"
d G "WDT_36MS" 1 116 "9"
d G "WDT_72MS" 1 117 "10"
d G "WDT_144MS" 1 118 "11"
d G "WDT_288MS" 1 119 "12"
d G "WDT_576MS" 1 120 "13"
d G "WDT_1152MS" 1 121 "14"
d G "WDT_2304MS" 1 122 "15"
d G "T1_DISABLED" 1 128 "0"
d G "T1_INTERNAL" 1 129 "0x85"
d G "T1_EXTERNAL" 1 130 "0x87"
d G "T1_EXTERNAL_SYNC" 1 131 "0x83"
d G "T1_CLK_OUT" 1 133 "8"
d G "T1_DIV_BY_1" 1 135 "0"
d G "T1_DIV_BY_2" 1 136 "0x10"
d G "T1_DIV_BY_4" 1 137 "0x20"
d G "T1_DIV_BY_8" 1 138 "0x30"
d G "T2_DISABLED" 1 143 "0"
d G "T2_DIV_BY_1" 1 144 "4"
d G "T2_DIV_BY_4" 1 145 "5"
d G "T2_DIV_BY_16" 1 146 "6"
d G "CCP_OFF" 1 152 "0"
d G "CCP_CAPTURE_FE" 1 153 "4"
d G "CCP_CAPTURE_RE" 1 154 "5"
d G "CCP_CAPTURE_DIV_4" 1 155 "6"
d G "CCP_CAPTURE_DIV_16" 1 156 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 157 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 158 "9"
d G "CCP_COMPARE_INT" 1 159 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 1 160 "0xB"
d G "CCP_PWM" 1 161 "0xC"
d G "CCP_PWM_PLUS_1" 1 162 "0x1c"
d G "CCP_PWM_PLUS_2" 1 163 "0x2c"
d G "CCP_PWM_PLUS_3" 1 164 "0x3c"
v G "CCP_1" 1 165 "int16"
v G "CCP_2" 1 169 "int16"
d G "PSP_ENABLED" 1 178 "0x10"
d G "PSP_DISABLED" 1 179 "0"
d G "SPI_MASTER" 1 186 "0x20"
d G "SPI_SLAVE" 1 187 "0x24"
d G "SPI_L_TO_H" 1 188 "0"
d G "SPI_H_TO_L" 1 189 "0x10"
d G "SPI_CLK_DIV_4" 1 190 "0"
d G "SPI_CLK_DIV_16" 1 191 "1"
d G "SPI_CLK_DIV_64" 1 192 "2"
d G "SPI_CLK_T2" 1 193 "3"
d G "SPI_SS_DISABLED" 1 194 "1"
d G "SPI_SAMPLE_AT_END" 1 196 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 197 "0x4000"
d G "UART_ADDRESS" 1 203 "2"
d G "UART_DATA" 1 204 "4"
d G "A0_A3_A1_A3" 1 208 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 209 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 210 "0xbcf05"
d G "NC_NC_NC_NC" 1 211 "0x0ff07"
d G "A0_A3_A1_A2" 1 212 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 213 "0x9ef01"
d G "A0_VR_A1_VR" 1 214 "0x3ff06"
d G "A3_VR_A2_VR" 1 215 "0xcff0e"
d G "CP1_INVERT" 1 216 "0x0000010"
d G "CP2_INVERT" 1 217 "0x0000020"
d G "VREF_LOW" 1 225 "0xa0"
d G "VREF_HIGH" 1 226 "0x80"
d G "VREF_A2" 1 228 "0x40"
d G "ADC_OFF" 1 236 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 237 "0x10000"
d G "ADC_CLOCK_DIV_4" 1 238 "0x4000"
d G "ADC_CLOCK_DIV_8" 1 239 "0x0040"
d G "ADC_CLOCK_DIV_16" 1 240 "0x4040"
d G "ADC_CLOCK_DIV_32" 1 241 "0x0080"
d G "ADC_CLOCK_DIV_64" 1 242 "0x4080"
d G "ADC_CLOCK_INTERNAL" 1 243 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 1 246 "7" "None"
d G "ALL_ANALOG" 1 247 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 1 248 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 1 249 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 250 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 251 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 252 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 1 253 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 1 254 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 1 255 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 1 256 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 1 257 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 258 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 259 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 260 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 261 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 1 262 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 1 263 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 264 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 265 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 266 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 1 267 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 1 268 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 1 269 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 1 270 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 271 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 272 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 273 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 277 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 278 "1"
d G "ADC_READ_ONLY" 1 279 "6"
d G "L_TO_H" 1 291 "0x40"
d G "H_TO_L" 1 292 "0"
d G "GLOBAL" 1 294 "0x0BC0"
d G "INT_RTCC" 1 295 "0x0B20"
d G "INT_RB" 1 296 "0xFF0B08"
d G "INT_EXT" 1 297 "0x0B10"
d G "INT_AD" 1 298 "0x8C40"
d G "INT_TBE" 1 299 "0x8C10"
d G "INT_RDA" 1 300 "0x8C20"
d G "INT_TIMER1" 1 301 "0x8C01"
d G "INT_TIMER2" 1 302 "0x8C02"
d G "INT_CCP1" 1 303 "0x8C04"
d G "INT_CCP2" 1 304 "0x8D01"
d G "INT_SSP" 1 305 "0x8C08"
d G "INT_PSP" 1 306 "0x8C80"
d G "INT_BUSCOL" 1 307 "0x8D08"
d G "INT_EEPROM" 1 308 "0x8D10"
d G "INT_TIMER0" 1 309 "0x0B20"
d G "INT_COMP" 1 310 "0x8D40"
D G "_STDLIB" 2 12 ""
D G "RAND_MAX" 2 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 2 25 "1"
T G "div_t" 2 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 2 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "unsigned int16"
D G "size_t" 3 21 "unsigned int8"
D G "wchar_t" 3 22 "char"
D G "NULL" 3 23 "0"
D G "offsetof" 3 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 2 43 2 "FUNCTION"
C L "atof" 2 46 1 "*"
C L "atof" 2 46 1 "*"
V L "s" 2 50 "*int8"
F G "atof" 2 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 2 76 1 "*"
C L "atof" 2 76 1 "*"
C L "atof" 2 76 1 "*"
V L "s" 2 82 "*int8"
F G "atoe" 2 82 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 2 89 1 "*"
C L "atoe" 2 89 1 "*"
V L "s" 2 93 "*int8"
F G "atoi" 2 93 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 2 101 "*int8"
F G "atoi32" 2 101 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 2 89 2 "FUNCTION"
V L "num" 2 122 "sint32"
V L "base" 2 122 "int8"
V L "s" 2 122 "*int8"
F G "itoa" 2 122 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 2 124 1 "*"
C L "itoa" 2 124 1 "*"
V L "s" 2 128 "*int8"
F G "atol" 2 128 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 2 130 1 "*"
C L "atol" 2 130 1 "*"
C L "atol" 2 130 3 "*"
V L "s" 2 138 "*int8"
V L "endptr" 2 138 "*int8"
F G "strtod" 2 138 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 2 130 2 "FUNCTION"
C L "strtod" 2 141 1 "*"
C L "strtod" 2 141 1 "*"
C L "strtod" 2 141 2 "*"
C L "strtod" 2 154 1 "*"
C L "strtod" 2 154 1 "*"
C L "strtod" 2 154 1 "*"
C L "strtod" 2 154 1 "*"
V L "s" 2 160 "*int8"
V L "endptr" 2 160 "*int8"
V L "base" 2 160 "sint8"
F G "strtol" 2 160 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 2 162 1 "*"
C L "strtol" 2 162 1 "*"
C L "strtol" 2 162 1 "*"
C L "strtol" 2 162 1 "*"
V L "s" 2 168 "*int8"
V L "endptr" 2 168 "*int8"
V L "base" 2 168 "sint8"
F G "strtoul" 2 168 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 2 162 1 "FUNCTION"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
C L "strtoul" 2 174 1 "*"
F G "rand" 2 183 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
C L "rand" 2 185 1 "*"
V L "seed" 2 205 "int32"
F G "srand" 2 205 "void(int32 seed)" "Memory management functions"
C L "srand" 2 185 3 "FUNCTION"
V L "string" 2 219 "*int8"
F G "system" 2 219 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 2 185 1 "FUNCTION"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 1 "*"
C L "system" 2 225 4 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
C L "system" 2 243 1 "*"
D G "labs" 2 263 "abs"
V L "numer" 2 265 "sint8"
V L "denom" 2 265 "sint8"
F G "div" 2 265 "div_t(sint8 numer,sint8 denom)"
V L "numer" 2 266 "sint16"
V L "denom" 2 266 "sint16"
F G "ldiv" 2 266 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 2 243 4 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
D G "_STRING" 4 12 ""
C L "ldiv" 3 2 7 "FUNCTION"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
F G "memmove" 4 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
C L "strcopy" 4 19 3 "FUNCTION"
V L "s1" 4 53 "*int8"
V L "s2" 4 53 "*int8"
F G "strcopy" 4 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 55 "*int8"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 69 "*int8"
V L "s2" 4 69 "*int8"
V L "n" 4 69 "int8"
F G "strncpy" 4 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 71 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 86 "*int8"
V L "s2" 4 86 "*int8"
F G "strcat" 4 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 88 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 104 "*int8"
V L "s2" 4 104 "*int8"
V L "n" 4 104 "int8"
F G "strncat" 4 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 106 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 128 "*int8"
V L "s2" 4 128 "*int8"
V L "n" 4 128 "int8"
F G "memcmp" 4 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 4 130 "*int8"
V L "su2" 4 130 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 142 "*int8"
V L "s2" 4 142 "*int8"
F G "strcmp" 4 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 152 "*int8"
V L "s2" 4 152 "*int8"
F G "strcoll" 4 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 165 "*int8"
V L "s2" 4 165 "*int8"
V L "n" 4 165 "int8"
F G "strncmp" 4 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 177 "*int8"
V L "s2" 4 177 "*int8"
V L "n" 4 177 "int8"
F G "strxfrm" 4 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 179 "*int8"
V L "n1" 4 180 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 199 "*int8"
V L "c" 4 199 "int8"
V L "n" 4 199 "int8"
F G "memchr" 4 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 4 201 "int8"
V L "su" 4 202 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 213 "*int8"
V L "c" 4 213 "int8"
F G "strchr" 4 214 "*int8(*int8 s,int8 c)"
V L "s1" 4 225 "*int8"
V L "s2" 4 225 "*int8"
F G "strcspn" 4 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 227 "*int8"
V L "sc2" 4 227 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 240 "*int8"
V L "s2" 4 240 "*int8"
F G "strpbrk" 4 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 242 "*int8"
V L "sc2" 4 242 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 255 "*int8"
V L "c" 4 255 "int8"
F G "strrchr" 4 256 "*int8(*int8 s,int8 c)"
V L "p" 4 257 "*int8"
V L "s1" 4 270 "*int8"
V L "s2" 4 270 "*int8"
F G "strspn" 4 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 272 "*int8"
V L "sc2" 4 272 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 289 "*int8"
V L "s2" 4 289 "*int8"
F G "strstr" 4 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 291 "*int8"
V L "t" 4 291 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 328 "*int8"
V L "s2" 4 328 "*int8"
F G "strtok" 4 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 330 "*int8"
V L "end" 4 330 "*int8"
V L "save" 4 331 "*int8"
V L "s" 4 377 "*int8"
F G "strlen" 4 378 "*int8(*int8 s)"
V L "sc" 4 379 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 388 "*int8"
V L "s2" 4 388 "*int8"
F G "stricmp" 4 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 402 "*int8"
F G "strlwr" 4 403 "*int8(*int8 s)"
V L "p" 4 404 "*int8"
V L "numer" 2 288 "sint8"
V L "denom" 2 288 "sint8"
F G "div" 2 289 "div_t(sint8 numer,sint8 denom)"
V L "val" 2 290 "div_t"
V L "numer" 2 296 "sint16"
V L "denom" 2 296 "sint16"
F G "ldiv" 2 297 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 2 298 "ldiv_t"
V L "s" 2 305 "*int8"
F G "atof" 2 306 "float(*int8 s)"
V L "pow10" 2 307 "float"
V L "result" 2 308 "float"
V L "sign" 2 309 "int8"
V L "c" 2 310 "int8"
V L "ptr" 2 311 "int8"
V L "s" 2 536 "*int8"
F G "atoe" 2 537 "float(*int8 s)"
V L "pow10" 2 538 "float"
V L "result" 2 539 "float"
V L "sign" 2 540 "int8"
V L "expsign" 2 541 "int8"
V L "c" 2 542 "int8"
V L "ptr" 2 543 "int8"
V L "i" 2 544 "int8"
V L "exp" 2 545 "float"
V L "expcnt" 2 546 "int8"
C L "atoe" 2 572 1 "FUNCTION"
V L "s" 2 604 "*int8"
F G "atoi" 2 605 "sint8(*int8 s)"
V L "result" 2 606 "sint8"
V L "sign" 2 607 "int8"
V L "base" 2 607 "int8"
V L "index" 2 607 "int8"
V L "c" 2 608 "int8"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
C L "atoi" 2 572 1 "FUNCTION"
V L "s" 2 673 "*int8"
F G "atol" 2 674 "sint16(*int8 s)"
V L "result" 2 675 "sint16"
V L "sign" 2 676 "int8"
V L "base" 2 676 "int8"
V L "index" 2 676 "int8"
V L "c" 2 677 "int8"
C L "atol" 2 572 1 "FUNCTION"
C L "atol" 2 572 1 "FUNCTION"
C L "atol" 2 572 1 "FUNCTION"
C L "atol" 2 572 1 "FUNCTION"
C L "mult_with10" 2 572 1 "FUNCTION"
V L "num" 2 740 "int32"
F G "mult_with10" 2 741 "sint32(int32 num)"
V L "s" 2 746 "*int8"
F G "atoi32" 2 747 "sint32(*int8 s)"
V L "result" 2 748 "sint32"
V L "sign" 2 749 "int8"
V L "base" 2 749 "int8"
V L "index" 2 749 "int8"
V L "c" 2 750 "int8"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
C L "atoi32" 2 572 1 "FUNCTION"
V L "num" 2 945 "sint32"
V L "base" 2 945 "int8"
V L "s" 2 945 "*int8"
F G "itoa" 2 946 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 2 947 "int32"
V L "i" 2 948 "int8"
V L "sign" 2 948 "int8"
V L "cnt" 2 948 "int8"
V L "c" 2 949 "int8"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
C L "itoa" 2 572 1 "FUNCTION"
V L "s" 2 983 "*int8"
V L "endptr" 2 983 "*int8"
F G "strtod" 2 983 "float(*int8 s,*int8 endptr)"
V L "pow10" 2 984 "float"
V L "result" 2 985 "float"
V L "sign" 2 986 "int8"
V L "point" 2 986 "int8"
V L "c" 2 987 "int8"
V L "ptr" 2 988 "int8"
V L "s" 2 1245 "*int8"
V L "endptr" 2 1245 "*int8"
V L "base" 2 1245 "sint8"
F G "strtoul" 2 1246 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 1247 "*int8"
V L "s1" 2 1247 "*int8"
V L "sd" 2 1247 "*int8"
V L "x" 2 1248 "int16"
V L "sign" 2 1249 "int8"
V L "digits" 2 1250 "int8[1]"
C L "strtoul" 2 572 1 "FUNCTION"
C L "strtoul" 2 572 1 "FUNCTION"
C L "strtoul" 2 572 1 "FUNCTION"
V L "s" 2 1307 "*int8"
V L "endptr" 2 1307 "*int8"
V L "base" 2 1307 "sint8"
F G "strtol" 2 1308 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 1309 "*int8"
V L "s1" 2 1309 "*int8"
V L "sd" 2 1309 "*int8"
V L "x" 2 1310 "sint16"
V L "sign" 2 1311 "int8"
V L "digits" 2 1312 "int8[1]"
C L "strtol" 2 572 1 "FUNCTION"
C L "strtol" 2 572 1 "FUNCTION"
C L "strtol" 2 572 1 "FUNCTION"
V L "string" 2 1370 "*int8"
F G "system" 2 1371 "sint8(*int8 string)"
V L "s" 2 1375 "*int8"
V L "n" 2 1375 "int8"
F G "mblen" 2 1376 "int8(*int8 s,int8 n)"
V L "pwc" 2 1380 "*int8"
V L "s" 2 1380 "*int8"
V L "n" 2 1380 "int8"
F G "mbtowc" 2 1381 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 2 1386 "*int8"
V L "wchar" 2 1386 "int8"
F G "wctomb" 2 1387 "int8(*int8 s,int8 wchar)"
V L "pwcs" 2 1392 "*int8"
V L "s" 2 1392 "*int8"
V L "n" 2 1392 "int8"
F G "mbstowcs" 2 1393 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 2 1398 "*int8"
V L "pwcs" 2 1398 "*int8"
V L "n" 2 1398 "int8"
F G "wcstombs" 2 1399 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 2 1408 "int32"
F G "rand" 2 1411 "int16()"
V L "seed" 2 1416 "int32"
F G "srand" 2 1417 "void(int32 seed)"
V L "p1" 2 1426 "*int8"
V L "p2" 2 1426 "*int8"
T G "*_Cmpfun" 2 1426 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 2 1433 "*int8"
V L "qitems" 2 1433 "int8"
V L "qsize" 2 1433 "int8"
V L "cmp" 2 1433 "_Cmpfun"
F G "qsort" 2 1433 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 2 1434 "int8"
V L "j" 2 1434 "int8"
V L "i" 2 1434 "int8"
V L "l" 2 1434 "int8"
V L "done" 2 1435 "int1"
V L "t" 2 1436 "int8[16]"
V L "key" 2 1461 "*int8"
V L "base" 2 1461 "*int8"
V L "num" 2 1461 "int8"
V L "width" 2 1461 "int8"
V L "cmp" 2 1461 "_Cmpfun"
F G "bsearch" 2 1462 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 2 1463 "*int8"
V L "q" 2 1463 "*int8"
V L "n" 2 1464 "int8"
V L "pivot" 2 1465 "int8"
V L "val" 2 1466 "sint8"
C L "bsearch" 2 572 1 "FUNCTION"
D G "_STDIO" 6 12 ""
D G "LCD_ADDR" 7 76 "0x40" "I2C slave address for LCD module"
D G "ON" 7 79 "1"
D G "OFF" 7 80 "0"
D G "RS" 7 81 "0b00000001" "P0 - PCF8574T Pin connected to RS"
D G "RW" 7 82 "0b00000010" "P1 - PCF8574T Pin connected to RW"
D G "EN" 7 83 "0b00000100" "P2 - PCF8574T Pin connected to EN"
D G "BACKLIGHT_LED" 7 84 "0b00001000" "P3 - PCF8574T Pin connected to BACKLIGHT LED"
D G "lcd_line_one" 7 86 "0x80" "LCD RAM address for line 1"
D G "lcd_line_two" 7 87 "0xC0" "LCD RAM address for line 2"
D G "lcd_line_three" 7 88 "0x94" "LCD RAM address for line 3"
D G "lcd_line_four" 7 89 "0xD4" "LCD RAM address for line 4"
V G "address" 7 91 "int8"
V G "lcd_backlight" 7 92 "int1"
V L "data" 7 94 "int8"
F G "i2c_send_nibble" 7 95 "void(int8 data)"
C L "i2c_send_nibble" 7 2 1 "FUNCTION"
V L "data" 7 106 "int8"
F G "lcd_send_byte" 7 107 "void(int8 data)"
C L "lcd_send_byte" 7 2 1 "FUNCTION"
C L "lcd_send_byte" 7 2 1 "FUNCTION"
F G "lcd_clear" 7 115 "void()"
F G "lcd_init" 7 122 "void()"
C L "lcd_init" 7 2 2 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
C L "lcd_init" 7 2 1 "FUNCTION"
V L "x" 7 150 "int8"
V L "y" 7 150 "int8"
F G "lcd_gotoxy" 7 151 "void(int8 x,int8 y)"
V L "data" 7 152 "int8"
C L "LCD_PUTC" 7 2 1 "FUNCTION"
V L "in_data" 7 172 "int8"
F G "LCD_PUTC" 7 173 "void(int8 in_data)"
V L "data" 7 174 "int8"
C L "LCD_PUTC" 7 2 1 "FUNCTION"
C L "LCD_PUTC" 7 2 1 "FUNCTION"
D G "THRESHOLD_ANALOG" 0 19 "10" "Threshold value adc"
D G "NSAMPLES" 0 20 "10" "Number of samples to be taken each channel"
D G "NCHANNELS" 0 21 "4" "Number of channels to read"
D G "SCHEDULINGPERIOD" 0 22 "5" "3*Base time of timer ex 10ms*3"
D G "LCD_SIZE" 0 23 "8" "lcd number colums"
D G "RESOLUTION" 0 27 "1024"
D G "MAX_DB" 0 28 "12.0"
D G "MACRO_PERCENTAGE" 0 30 " (VARIABLE) ( (VARIABLE*100)/RESOLUTION)"
D G "MACRO_DB" 0 31 " (VARIABLE) ( (VARIABLE - (RESOLUTION/2))*(RESOLUTION/2)/MAX_DB)"
D G "MACRO_BALANCE_LEFT" 0 32 " (VARIABLE) ( (RESOLUTION/2) + ( (RESOLUTION/2) - (VARIABLE/2) ))"
D G "MACRO_BALANCE_RIGHT" 0 33 " (VARIABLE)( (RESOLUTION/2) - ( (RESOLUTION/2) - (VARIABLE/2) ))"
D G "BUTTONS_ADDRESS" 0 38 "0x72"
D G "LEDS_ADDRESS" 0 39 "0x74"
D G "LCD_ADDRESS" 0 40 "0x40"
D G "SOURCE_ADDRESS" 0 41 "0x76"
D G "REC_ADDRESS" 0 42 "0x78"
D G "AUX_ADDRESS" 0 43 "0x80"
D G "TONE_ADDRESS" 0 44 "0x82"
T G "analog_t" 0 59 "{int16[4] analog_new,int16[4] analog_old,int4[4] flags,int1 update}"
T G "channel_t" 0 70 "{int8[6] src,int8[6] rec,int8[4] vol,int8[2][4] bal}"
T G "pcf_t" 0 80 "{int8 button_value_old,int8 button_value_new,int1 flag,int8 source,int8 rec,int8 aux}" "GLOBAL VARIABLES////////"
V G "analog_values" 0 85 "analog_t" "Analog struct to save values;"
V G "scheduling_flag" 0 86 "int1"
V G "state_pcf" 0 87 "pcf_t"
V G "source" 0 90 "channel_t" "FUNCTIONS////////////"
C L "LCD_Splash" 0 10 1 "FUNCTION"
V L "address" 0 100 "int8"
F G "LCD_Splash" 0 101 "void(int8 address)"
V L "i" 0 102 "int8"
C L "LCD_Splash" 0 10 1 "FUNCTION"
C L "LCD_Splash" 0 10 1 "FUNCTION"
C L "LCD_Splash" 0 10 1 "FUNCTION"
C L "LCD_Splash" 0 10 1 "FUNCTION"
C L "LCD_Splash" 0 10 1 "FUNCTION"
C L "LCD_Splash" 0 10 6 "FUNCTION"
C L "LCD_Splash" 0 10 1 "FUNCTION"
C L "PCF_8574_Write" 0 10 1 "FUNCTION"
V L "data" 0 137 "int8"
V L "address" 0 137 "int8"
F G "PCF_8574_Write" 0 138 "void(int8 data,int8 address,int8 address)" "Start i2c negotiation"
C L "PCF_8574_Write" 0 10 1 "FUNCTION"
C L "PCF_8574_Write" 0 10 1 "FUNCTION"
C L "PCF_8574_Read" 0 10 1 "FUNCTION"
V L "address" 0 156 "int8"
F G "PCF_8574_Read" 0 157 "int8(int8 address)"
V L "data" 0 158 "int8"
C L "PGA_2311_Config" 0 10 1 "FUNCTION"
F G "PGA_2311_Config" 0 172 "void(int8 data_l,int8 data_r)" "Function to Write value to PGA"
V L "data_l" 0 180 "int8"
V L "data_r" 0 180 "int8"
F G "PGA_2311_Write" 0 181 "void(int8 data_l,int8 data_r)" "Function to config the timer for the scheduling"
F G "Timer_Config" 0 190 "void()" "setup_timer_2(T2_DIV_BY_4,78,16);//setup up timer2 to interrupt every 1ms"
C L "Timer_Config" 0 10 20 "FUNCTION"
C L "Timer_Config" 0 10 1 "FUNCTION"
C L "ADC_Config" 0 10 1 "FUNCTION"
F G "ADC_Config" 0 232 "void()"
C L "ADC_Config" 0 10 1 "FUNCTION"
C L "ADC_Config" 0 10 1 "FUNCTION"
C L "Analog_Check" 0 10 1 "FUNCTION"
F G "Analog_Check" 0 242 "void()"
V L "i" 0 243 "int8"
C L "Analog_Check" 0 10 1 "FUNCTION"
C L "Analog_Check" 0 10 1 "FUNCTION"
C L "Analog_Check" 0 10 1 "FUNCTION"
C L "Analog_Check" 0 10 1 "FUNCTION"
C L "Analog_Check" 0 10 1 "FUNCTION"
C L "Analog_Check" 0 10 1 "FUNCTION"
C L "ADC_Read_All" 0 10 1 "FUNCTION"
F G "ADC_Read_All" 0 265 "void()"
V L "i" 0 266 "int8"
V L "j" 0 266 "int8"
C L "ADC_Read_All" 0 10 1 "FUNCTION"
C L "ADC_Read_All" 0 10 1 "FUNCTION"
C L "ADC_Read_All" 0 10 1 "FUNCTION"
C L "ext_isr" 0 10 1 "FUNCTION"
F G "ext_isr" 0 288 "void()" "Enable the flag"
C L "ext_isr" 0 10 1 "FUNCTION"
C L "timer2_isr" 0 10 1 "FUNCTION"
F G "timer2_isr" 0 304 "void()" "Keep variables that are local _local_"
V L "tick" 0 306 "int8"
C L "timer2_isr" 0 10 1 "FUNCTION"
C L "timer2_isr" 0 10 1 "FUNCTION"
V L "line" 0 316 "int8"
F G "Display_Update" 0 317 "void(int8 line)" "0123456789012345//"
C L "Display_Update" 0 10 7 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
F G "MAIN" 0 347 "void()"
V L "i" 0 348 "int8"
V L "dummy" 0 348 "int8"
V L "test" 0 348 "int8"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 2 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 2 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
C L "MAIN" 0 10 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "i2c_poll" 0 1
